name: Build HCI
on: 
  workflow_dispatch:
    inputs:
      location:
        description: 'Azure Resource Location'
        required: true
        default: 'eastus'
        type: choice
        options:
        - eastus
        - eastus2
        - westus
        - westeurope
      resourceGroupName:
        description: 'Azure Resource Group'
        type: string
        default: rg-arc-footprint-hci
        required: true
      createCluster:
        description: 'Create Cluster on HCI'
        type: boolean
        default: false
        required: true
jobs:
  Build-HCI:
    runs-on: ubuntu-latest
    env:
      registerCluster: true
      deployAKSHCI: true
      deployResourceBridge: true
      natDNS: '8.8.8.8'
      rdpPort: 3389
      autoDeployClusterResource: true
      autoUpgradeClusterResource: true
      templateBaseUrl: 'https://raw.githubusercontent.com/bindsi/azure-edge-extensions-aio-environments/main/azure_jumpstart_hcibox/'
    outputs:
      configurationName: ${{ steps.createImage.outputs.configurationName }}
      vmSize: ${{ steps.createImage.outputs.vmSize }}
      imageVersion: ${{ steps.createImage.outputs.imageVersion }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Log in with Azure
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZURE_SP_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_SP_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
    - name: Run az deployment for image creation
      id: createImage
      run: |
        echo "Running az deployment group create..."

        tenantId="$(az account show --query tenantId -o tsv)"
        subscriptionId="$(az account show --query id -o tsv)"
        logAnalyticsName=$(echo ${{ inputs.resourceGroupName }} | sed 's/rg-/la-/g')
        echo "logAnalyticsName: $logAnalyticsName"
        az group create --name ${{ inputs.resourceGroupName }} --location ${{ inputs.location }}

        stagingStorageAccountName=$(az deployment group create \
          --name fpdeployment${{github.run_id}} \
          --resource-group ${{ inputs.resourceGroupName }} \
          --template-file $GITHUB_WORKSPACE/azure_jumpstart_hcibox/bicep/main.bicep \
          --parameters spnClientId=${{ secrets.AZURE_SP_CLIENT_ID }} \
                        spnClientSecret=${{ secrets.AZURE_SP_CLIENT_SECRET }} \
                        spnTenantId=$tenantId \
                        spnProviderId=${{ secrets.AZURE_STACK_HCI_OBJECT_ID }} \
                        windowsAdminUsername=${{ secrets.VMADMINUSERNAME }} \
                        windowsAdminPassword=${{ secrets.VMADMINPASSWORD }} \
                        logAnalyticsWorkspaceName=$logAnalyticsName \
                        deployBastion=false \
                        autoDeployClusterResource=${{ inputs.createCluster }} \
                        autoUpgradeClusterResource=false --query properties.outputs.storageAccountName.value -o tsv)
        # stagingStorageAccountName="hciboxgeo2vvwttiqdw"

        echo "Restarting VM..."
        az vm restart -g ${{ inputs.resourceGroupName }} -n HCIBox-Client

        echo "Bootstrapping..."
        az vm extension set \
        --resource-group ${{ inputs.resourceGroupName }} \
        --vm-name HCIBox-Client \
        --name CustomScriptExtension \
        --publisher Microsoft.Compute \
        --force-update \
        --settings "{\"fileUris\": [\"$templateBaseUrl/artifacts/PowerShell/Bootstrap.ps1\"], \"commandToExecute\":\"powershell.exe -ExecutionPolicy Bypass -File Bootstrap.ps1 -adminUsername ${{ secrets.VMADMINUSERNAME }} -adminPassword ${{ secrets.VMADMINPASSWORD }} -spnClientId ${{ secrets.AZURE_SP_CLIENT_ID }} -spnClientSecret ${{ secrets.AZURE_SP_CLIENT_SECRET }} -spnTenantId $tenantId -subscriptionId $subscriptionId -spnProviderId ${{ secrets.AZURE_STACK_HCI_OBJECT_ID }} -resourceGroup ${{ inputs.resourceGroupName }} -azureLocation ${{ inputs.location }} -stagingStorageAccountName $stagingStorageAccountName -workspaceName $logAnalyticsName -templateBaseUrl $templateBaseUrl -registerCluster ${{ env.registerCluster }} -deployAKSHCI ${{ env.deployAKSHCI }} -deployResourceBridge ${{ env.deployResourceBridge }} -natDNS ${{ env.natDNS }} -rdpPort ${{ env.rdpPort }} -autoDeployClusterResource ${{ env.autoDeployClusterResource }} -autoUpgradeClusterResource ${{ env.autoUpgradeClusterResource }} -groupObjectID ${{ secrets.HCI_AKS_GROUP_OBJECT_ID }} \
        \"}"
